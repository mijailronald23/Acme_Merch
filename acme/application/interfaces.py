from typing import Protocol, runtime_checkable
from acme.domain.product import Product
from acme.domain.order import Order

@runtime_checkable
class ProductRepository(Protocol):
    def add(self, p: Product) -> Product: ...
    def update(self, p: Product) -> None: ...
    def get_by_id(self, id: int) -> Product | None: ...
    def get_by_sku(self, sku: str) -> Product | None: ...
    def list(self) -> list[Product]: ...

@runtime_checkable
class OrderRepository(Protocol):
    def add(self, o: Order) -> Order: ...
    def get_by_id(self, id: int) -> Order | None: ...
    def list(self) -> list[Order]: ...

@runtime_checkable
class UnitOfWork(Protocol):
    products: ProductRepository
    orders: OrderRepository
    def __enter__(self) -> "UnitOfWork": ...
    def __exit__(self, exc_type, exc, tb) -> None: ...
    def commit(self) -> None: ...
